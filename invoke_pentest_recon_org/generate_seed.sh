#!/bin/bash
SCRIPT_DIR=$(dirname "$0")
CONFIG_FILE="in_generate_seed.cnf"

USAGE="$0 <company_names> <domains> [conf=$CONFIG_FILE] "
if [ $# -lt 2 ]; then
    echo "[-] $USAGE"
    exit 1
fi
company_name="$1"
domain="$2"
conffile=${3:-"$CONFIG_FILE"}

if [ -f "$conffile" ]; then
    echo "[*] Load the config file: $conffile..."
    source "$conffile"
else    
    echo "[-] conf: $conffile not found"
    exit 1
fi

# Remove output file
rm "$SCRIPT_DIR"/"$OUTFILE"

tmpfile=$(mktemp -u)

IFS=','
for company_name in $company_names; do
    echo "[*] Generate the domains  with same company name: $company_name from whoxy to outfile: $OUTFILE..."
    # Replace any whitespace with '+'
    company_name=$(echo "$company_name" | tr -s " " "+")
    curl -sL "https://api.whoxy.com/?key=$WHOXY_API_KEY&reverse=whois&company=$company_name&mode=micro" \
        -o "$tmpfile"
    jq -r ".search_result[].domain_name"  "$tmpfile" | "$GOLANG_BIN_DIR"/anew -q "$SCRIPT_DIR/$OUTFILE"
done

IFS=","
for domain in $domains; do
    echo "[*] Invoking AADOutsider-py for domain: $domain to outfile: $OUTFILE..."
    cwd=$(pwd)
    cd /opt/AADOutsider-py
    source venv/bin/activate
    python3 aadoutsider.py recon -d "$domain" -of json -o "$tmpfile"
    cat "$tmpfile" | jq -r ".[].Name" | "$GOLANG_BIN_DIR"/anew -q "$SCRIPT_DIR/$OUTFILE"
    deactivate
    cd "$cwd"
done

if [ -f "$MANUAL_DOMAINS_LIST" ]; then
    echo "[*] Loading manual domains from file: $MANUAL_DOMAINS_LIST..."
    cat "$MANUAL_DOMAINS_LIST" | grep -viE "^$|^# " | "$GOLANG_BIN_DIR"/anew -q "$SCRIPT_DIR/$OUTFILE"
fi

# Remove the tmp file
rm "$tmpfile"